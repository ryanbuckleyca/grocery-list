*:active {
  outline: 0;
}
*:focus {
  outline: 2px solid rgba(var(--accent), 0.5) !important;
}

html {
  padding: 0;
  margin: 0;
  max-width: 100%;
  touch-action: manipulation;
}
body {
  background-color: rgb(var(--background));
  color: rgb(var(--foreground));
  font-size: 3.7vh;
  font-family: var(--font);
  margin: 0 2vh 0 1vh;
  padding: 0;
  max-width: 100%;
}
p {
  padding: 0vh;
  margin: 1vh;
}
hr {
  margin: 0 0 1vh 0;
  border: 0.1px solid;
  border-color: rgba(var(--foreground), 0.1) !important;
}
ul {
  padding: 0 !important; 
}

.modal-dialog {
  min-width: 90vw;
}
.modal-content {
  background-color: rgb(var(--background));
  color: rgb(var(--foreground));
  border-radius: 3%;
}
.modal-header, .modal-body {
  padding: 25px;
}
.modal-content .close {
  color: rgb(var(--out));
  text-shadow: none;
  font-size: 125%;
  opacity: 1;
}
.modal-footer {
  padding: 25px;
  justify-content: space-around;
}
/*the container must be positioned relative:*/
#addItems {
  position: relative;
  display: inline-block;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;    
  box-sizing: border-box;
  width: 100%;
}
#addItems input {
  width: 100%;
  font-size: 100%;
  padding: 10px;  
  border-radius: 5px;
  background-color: rgba(var(--foreground), 0.05);
  color: rgb(var(--foreground));
  outline: 0 !important;
  border: 1px solid rgba(var(--foreground), 0.1);
}
.autocomplete-items {
  position: absolute;
  border: 1px solid rgba(var(--background), 0.5);
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: rgb(var(--background)); 
  border-bottom: 1px solid rgba(var(--background), 0.7); 
}
/*when hovering an item:*/
.autocomplete-items div:hover {
  background-color: rgb(var(--background)); 
  filter: brightness(110%);
}
/*when navigating through the items using the arrow keys:*/
.autocomplete-active {
  background-color: rgb(var(--accent)) !important; 
  color: rgb(var(--foreground)); 
}

#groceryMenu {
  position: sticky;
  z-index: 1;
  top: 0;
  background: rgb(var(--background));
  width: 100%;
  padding: 2vh 0 2vh 0;
  overflow: hidden;
  margin-bottom: 2vh;
}
#groceryMenu button {
  font-size: 125%;
  background: rgb(var(--background));
  color: rgb(var(--foreground));
  border: 0;
  margin-bottom: auto;
}
#groceryMenu #dropdown {
  display: none;
  position: relative;
  background: rgb(var(--background));
  width: 99%;
  margin: auto;
  top: 2vh;
  padding: 2vh 3vh;
}
#groceryMenu a {
  color: rgb(var(--foreground));
  margin: 2vh auto;
  text-decoration: none;
  font-size: inherit;
  display: block;
  z-index: 6;
}
#groceryMenu a:hover span {
  padding: 0 1vh 0 1vh;
  color: rgb(var(--foreground));
  background: linear-gradient(181deg, rgb(var(--background)) 62%, rgba(var(--accent), 0.3) 51%);
}
#groceryMenu h1 {
  font-size: 150%;
  height: 4.7vh;
  margin: auto;
  text-shadow: 0.5px 0.5px 0px;
  color: rgb(var(--foreground));
}
#groceryMenu h1 span {
  background: linear-gradient(177deg, rgb(var(--background)) 50%, rgba(var(--accent), 0.5) 51%);
  padding: 0 1vh 0 1vh;
}
#groceryMenu h1:focus { 
  outline: none !important; 
  -webkit-appearance: none !important;
  outline: 0 !important;
}

.groceryRow {
  cursor: pointer;
}
.groceryRow li {
  list-style: none; 
}
.groceryRow input {
  height: 40px;
  align-self: center;
  margin: 0;
}


.delItem, .editItem, .chekBox {
  border: 0;
  margin: 0;
  padding: 0;
  text-align: center;
}
.delItem button {
  color: rgba(var(--out), 1);
  border: 0;
  padding: 8px;
  margin: 0;
  background: none;
  font-size: 120%;
}
.delItem button:hover {
  filter: brightness(115%);
}
.editItem button {
  color: rgb(var(--accent));
  padding: 8px;
  margin: 0;
  border: 0;
  background: none;
  font-size: 120%;
}
.editItem button:hover {
  filter: brightness(115%);
}

.groceryHeader {
  position: sticky;
  z-index: 3;
  top: 0;
  width: 100%;
  margin: auto;
  text-align: center;
  font-weight: bolder;
  font-size: 130%;
}
.groceryHeaderName {
  background: rgb(var(--background));
  padding: 1.5vh 0 2vh 0;
  margin: 2px auto;
  color: rgb(var(--foreground));
  animation: var(--flicker);
}
.groceryHeaderName:focus {
  outline: none !important;
}
.groceryHeaderName a {
  background: rgb(var(--background));
  color: rgb(var(--foreground));
}
.groceryHeader a:hover {
  text-decoration: none !important;
  color: rgb(var(--foreground));
}
a[aria-expanded=true] .fa-chevron-right {
  display: none;
  transform: scale(0.7);
}
a[aria-expanded=false] .fa-chevron-down {
  display: none;
  transform: scale(0.7);
}

.shopItem {
  transition: all 0.2s ease-in-out;
}

.groceryName button {
  z-index: 2;
  padding: 2vh;
  border-radius: 8px;
  width: 95%;
  text-align: center;
}

.groceryName p {
  z-index: 2;
  padding: 2vh;
  border-radius: 8px;
  text-align: center;
}
.groceryName:hover {
  filter: brightness(103%);
}
.low {
  color: rgb(var(--foreground));
  background-color: rgba(var(--low), 1);
  border: 0vh solid rgba(var(--low), 0.5);
  box-shadow: var(--glow) rgb(var(--low)); 

}
.out {
  color: rgb(var(--foreground));
  background-color: rgba(var(--out), 1);
  border: 0vh solid rgb(var(--out), 0.5);
  box-shadow: var(--glow) rgb(var(--out)); 

}
.good {
  color: rgb(var(--foreground));
  background-color: rgba(var(--good), 1);
  border: 0vh solid rgb(var(--good), 0.5);
  box-shadow: var(--glow) rgb(var(--good)); 

}
.edit {
  background-color: rgb(var(--background));
  color: rgb(var(--foreground));
  outline: 0 !important;
  box-shadow: inset 0px 0px 4px 0px rgb(var(--foreground));
  border: 0vh solid rgba(var(--foreground), 0.5);
}


.addItem {
  position: fixed;
  bottom: 1vh;
  right: 3.5vh;
  z-index: 5;
}
.addItem button {
  width: 14vh;
  height: 14vh;
  color: rgb(255, 255, 255);
  padding: 0;
  margin: 2vh 2vh 2vh 0vh;
  background: rgb(var(--accent));
  font-size: 6vh;
  border: 0;
  border-radius: 50%;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}
.addItem button:hover {
  filter: brightness(120%);
}

/* Animate neon flicker */
@keyframes flicker {
  0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% {    
      text-shadow:
      0 0 1px #fff,
      0 0 2px #fff,
      0 0 1px rgb(var(--accent)),
      0 0 5px rgb(var(--accent)),
      0 0 10px rgb(var(--accent)),
      0 0 15px rgb(var(--accent)),
      0 0 20px rgb(var(--accent))
  }
  20%, 24%, 55% {        
      text-shadow: none;
  }    
}

body{
  -webkit-animation: var(--strobe);
}
@-webkit-keyframes raveOn{
  0%{ opacity: 1; }
  100%{ opacity: 0.7; }
}